(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{293:function(s,a,t){"use strict";t.r(a);var e=t(14),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"shell-编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell-编程"}},[s._v("#")]),s._v(" shell 编程")]),s._v(" "),a("h2",{attrs:{id:"执行方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行方式"}},[s._v("#")]),s._v(" 执行方式")]),s._v(" "),a("ul",[a("li",[s._v("头部注释 #!/bin/bash 代表用 bash 解析这个脚本")]),s._v(" "),a("li",[s._v("sh ./xx.sh")]),s._v(" "),a("li",[s._v("bash ./xxx.sh 会产生新的子进程 比如脚本里面有 cd /home 执行完 在当前终端不会进入/home")]),s._v(" "),a("li",[s._v("./xxx.sh 会产生新的子进程")]),s._v(" "),a("li",[s._v("source ./xx.sh 在当前进程 比如脚本里面有 cd /home 执行完 当前终端就在/home")]),s._v(" "),a("li",[s._v(". xx.sh 在当前进程 ( . 其实是 source 简写)")])]),s._v(" "),a("h2",{attrs:{id:"管道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道"}},[s._v("#")]),s._v(" 管道")]),s._v(" "),a("ul",[a("li",[s._v("多个程序连接在一起，把前面输出作为第二个命令的输入 比如 ls -l | more")]),s._v(" "),a("li",[s._v("管道符 |")]),s._v(" "),a("li",[s._v("ps -ef | grep node")])]),s._v(" "),a("h2",{attrs:{id:"重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[s._v("#")]),s._v(" 重定向")]),s._v(" "),a("ul",[a("li",[s._v('输入重定向符号 "<"')]),s._v(" "),a("li",[s._v('输出重定向符号 ">" ">>" "2>" "&>"')])]),s._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),a("ul",[a("li",[s._v("a=123 不能有空格")]),s._v(" "),a("li",[s._v("let 变量")]),s._v(" "),a("li",[s._v("l=ls")]),s._v(" "),a("li",[s._v("ls=$(ls -l) 将命令结果赋值给变量使用$() 或者 ``")]),s._v(" "),a("li",[s._v('a=" 1 2 " 想要空格就用 "" 表示字符串')])]),s._v(" "),a("p",[s._v("变量引用")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("作用范围只针对当前 shell 范围")])]),s._v(" "),a("li",[a("p",[s._v("echo ${变量名}")])]),s._v(" "),a("li",[a("p",[s._v("部分情况可以这样 echo $变量名")])]),s._v(" "),a("li",[a("p",[s._v("source xx.sh 因为 source 是当前进程执行，所以可以使用变量")])]),s._v(" "),a("li",[a("p",[s._v("想要子进程访问父进程变量名，export a=123")])]),s._v(" "),a("li",[a("p",[s._v("删除变量 unset a")])]),s._v(" "),a("li",[a("p",[s._v("环境变量 env 命令")])]),s._v(" "),a("li",[a("p",[s._v("echo $USER")])]),s._v(" "),a("li",[a("p",[s._v("$? 显示上一条命令是否执行成功 0 或者 1 0 表示正常 非 0 不正常")])]),s._v(" "),a("li",[a("p",[s._v("$$ 是当前进程的 pid")])]),s._v(" "),a("li",[a("p",[s._v("$0 当前这个进程命令名称")])]),s._v(" "),a("li",[a("p",[s._v("a=${2-_} 如果$2 为空则 a 的值为 _")])])]),s._v(" "),a("p",[s._v("环境变量配置文件")]),s._v(" "),a("ul",[a("li",[s._v("/etc/profile")]),s._v(" "),a("li",[s._v("/etc/profile.d")]),s._v(" "),a("li",[s._v("~/.bash_profile")]),s._v(" "),a("li",[s._v("~/.bashrc")]),s._v(" "),a("li",[s._v("/etc/bashrc")])]),s._v(" "),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[s._v("#")]),s._v(" 数组")]),s._v(" "),a("ul",[a("li",[s._v("arr=( 1 2 3 )")]),s._v(" "),a("li",[s._v("显示数组所有元素 echo {arr[@]}")]),s._v(" "),a("li",[s._v("显示数组个数 echo {#arr[@]}")]),s._v(" "),a("li",[s._v("显示数组第一个元素 echo {arr[0]}")])]),s._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),a("ul",[a("li",[s._v("+ - * ** % /")]),s._v(" "),a("li",[s._v("expr")]),s._v(" "),a("li",[s._v("a=`expr 1 + 2` 只支持整数 要有空格")]),s._v(" "),a("li",[s._v("(( a = 10))")]),s._v(" "),a("li",[s._v("((a++))")]),s._v(" "),a("li",[s._v("echo $((10+20))")])]),s._v(" "),a("h2",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),a("ul",[a("li",[s._v("test 命令")]),s._v(" "),a("li",[s._v("test 1 = 1")]),s._v(" "),a("li",[s._v("[ 1 != 1 ] 有方括号可以省略 test 注意变量要加上双引号")]),s._v(" "),a("li",[s._v("[[2 > 1]] 数字比较要两个括号 注意 10或者以上的就不能用 > < 这种 要用 -gt这种")]),s._v(" "),a("li",[s._v("echo $? 0 为真 1 为假")])]),s._v(" "),a("h2",{attrs:{id:"条件语句-if-then-else"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件语句-if-then-else"}},[s._v("#")]),s._v(" 条件语句 if-then else")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("ul",[a("li",[a("p",[s._v("if [[2 > 1]]或命令返回值是否为 0")])]),s._v(" "),a("li",[a("p",[s._v("then 执行命令")])]),s._v(" "),a("li",[a("p",[s._v("fi 结束")])]),s._v(" "),a("li",[a("p",[s._v("if then else")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" ll\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("ul",[a("li",[s._v("if then elif then else")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" ll\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" ll\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("h2",{attrs:{id:"case-和-select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-和-select"}},[s._v("#")]),s._v(" case 和 select")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n条件1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nll\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n条件1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])]),a("h2",{attrs:{id:"循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[s._v("#")]),s._v(" 循环")]),s._v(" "),a("h3",{attrs:{id:"for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for"}},[s._v("#")]),s._v(" for")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c语言风格")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),a("h3",{attrs:{id:"while-如果条件为真一直执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while-如果条件为真一直执行"}},[s._v("#")]),s._v(" while 如果条件为真一直执行")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),a("h3",{attrs:{id:"until-如果条件为假一直执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#until-如果条件为假一直执行"}},[s._v("#")]),s._v(" until 如果条件为假一直执行")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),a("p",[s._v("break 跳出整个循环"),a("br"),s._v("\ncontinue 跳出当前继续执行下一个")]),s._v(" "),a("h2",{attrs:{id:"命令行参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行参数"}},[s._v("#")]),s._v(" 命令行参数")]),s._v(" "),a("ul",[a("li",[s._v("$0 代表脚本名称")]),s._v(" "),a("li",[s._v("$1 代表第一个参数")]),s._v(" "),a("li",[s._v("$* 和 $@ 代表所有位置参数")]),s._v(" "),a("li",[s._v("$# 代表位置参数数量")])])])}),[],!1,null,null,null);a.default=r.exports}}]);